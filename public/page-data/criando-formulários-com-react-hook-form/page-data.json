{"componentChunkName":"component---src-templates-blog-post-js","path":"/criando-formulários-com-react-hook-form/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://devjuniorplus.com.br"}},"markdownRemark":{"fields":{"slug":"/criando-formulários-com-react-hook-form/"},"frontmatter":{"description":"Aprenda a criar formulários de forma simples no React","title":"Criando formulários com React Hook Form","date":"27 de outubro de 2021","image":"assets/images/leon-dewiwje-lddmtgf89gu-unsplash.jpeg"},"html":"<h2>Introdução</h2>\n<p>Praticamente em todas as aplicações web (e mobile também), precisamos lidar com formulários, nem seja apenas na tela de login.</p>\n<p>Existem várias formas de criar e gerenciar formulários, podemos simplesmente utilizar a tag <code class=\"language-text\">&lt;form&gt;</code> do HTML e </p>\n<p>guadar os inputs em <code class=\"language-text\">states</code> do React. </p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setInputEmail</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setInputPassword</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  \n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Enviar</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Mas, a medida que os formulários crescem, precisamos de uma estratégia diferente, pois image salvar 15 valores de <code class=\"language-text\">inputs</code> em 15 estados diferentes... Complicado né?!</p>\n<p>Bom, para facilitar nossa vida, existem várias libs para lidar com formulários em React como Unform, Formik, KendoReact Form, React Final Form, React Hook Form entre várias outras. Nesse post, irei focar na <strong><a href=\"https://react-hook-form.com/\">React Hook Form</a></strong>.</p>\n<h2>Conhecendo a React Hook Form</h2>\n<p>Primeira coisa a se destacar é a <a href=\"https://react-hook-form.com/get-started\">documentação</a> da lib que está incrível, com bastante exemplo (tanto em JS quanto TS) e vários tópicos mais avançados.</p>\n<h2>Instalação</h2>\n<p>No nosso exemplo, vamos utilizar o Next.js com Styled Components. Caso não tenha familiaridade com eles, não tem problema, pode seguir o exemplo, não tem nada complicado (e se tiver use os comentários que vou lhe ajudar).</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># vamos usar meu template nesse exemplo, basta executar o comando abaixo:</span>\nnpx create-next-app form-example -e https://github.com/jjunior96/next-template</code></pre></div>\n<p>Agora, vamos instalar o React Hook Form:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> react-hook-form\n\n<span class=\"token comment\"># ou npm install react-hook-form</span></code></pre></div>\n<p>Tudo pronto para continuar!</p>\n<h2>Mãos na massa</h2>\n<p>Sem mais enrolação, vamos criar nosso primeiro formulário:</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// src/components/Form/index.tsx</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormHTMLAttributes <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">S</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./styles'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FormProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">FormHTMLAttributes<span class=\"token operator\">&lt;</span>HTMLFormElement<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  children<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Form</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children<span class=\"token punctuation\">,</span> onSubmit <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> FormProps</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">S.Container</span></span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">S.Content</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">S.Content</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">S.Container</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Form<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// src/components/Form/styles.ts</span>\n\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> Container <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>form<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> Content <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    padding: 0 1.6rem;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Vamos acessar o template de Dashboard (<code class=\"language-text\">src/templates/Dashboard/index.tsx</code>) e vamos apagar o conteúdo e deixá-lo assim:</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// src/templates/Dashboard/index.tsx</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useForm <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-hook-form\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Form <span class=\"token keyword\">from</span> <span class=\"token string\">\"components/Form\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function\">Dashboard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> register<span class=\"token punctuation\">,</span> handleSubmit <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onSubmit</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Form</span></span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span>onSubmit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      &lt;input type=\"email\" </span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"> />\n      &lt;input type=\"password\" </span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"> />\n      \n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Enviar</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Form</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Dashboard<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Pronto, template da nossa página criado!</p>\n<blockquote>\n<p>OBS.: No Next.js, todos os arquivos criados dentro da pasta <code class=\"language-text\">pages</code> se tornam uma rota.</p>\n<p>Exemplo: </p>\n<p>A pagina: <code class=\"language-text\">src/pages/users.tsx</code></p>\n<p>Acessamos no browser: <code class=\"language-text\">localhost:3000/users</code></p>\n<p>Simples né?!</p>\n<p>Vamos continuar nosso exemplo.</p>\n</blockquote>\n<p>Agora podemos executar:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> dev\n\n<span class=\"token comment\"># ou npm run dev</span></code></pre></div>\n<p>E acessar o browser em <code class=\"language-text\">localhost:3000</code>.</p>\n<h2>Recapitulando</h2>\n<p>Nesse post, aprendemos a como usar a lib React Hook Form para lidar com nossos formulários em React.</p>\n<p>Vale lembrar que o que fizemos é o básico que podemos realizar com essa lib, pois existem inúmeras outras funções interessantes como validação, que o React Hook Form traz de forma nativa ou podemos integrar com o <a href=\"https://www.npmjs.com/package/yup\">Yup</a> por exemplo, entre outras coisas.</p>\n<p>Caso você queira que eu traga mais coisas sobre esse lib fantástica que é o React Hook Form, basta deixar nos comentários abaixo e não deixe de me mandar uma mensagem e me seguir nas redes sociais:</p>\n<p><a href=\"https://www.linkedin.com/in/junior-alves-b66a10127/\">LinkedIn</a></p>\n<p><a href=\"https://www.instagram.com/devjuniorplus/\">Instagram</a></p>\n<p><a href=\"https://www.youtube.com/channel/UCERTT0Z4u-0dFask_kL83sw\">YouTube</a></p>\n<p><a href=\"https://github.com/jjunior96\">GitHub</a></p>\n<p>Muito obrigado por ler até aqui, espero ter te ajudado e até a próxima!</p>","timeToRead":3}},"pageContext":{"slug":"/criando-formulários-com-react-hook-form/","previousPost":{"fields":{"slug":"/conheca-a-estrategia-ultralearning-de-estudos/"},"frontmatter":{"title":"O que eu achei da estratégia Ultralearning?"}},"nextPost":{"fields":{"slug":"/resolvendo-erro-do-aspath-do-next-js-no-storybook/"},"frontmatter":{"title":"Resolvendo erro do \"asPath\" do Next.js no Storybook"}}}},"staticQueryHashes":["2037742868","3149229692","764694655"]}