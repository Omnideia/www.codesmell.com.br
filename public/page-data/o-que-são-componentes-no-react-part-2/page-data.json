{"componentChunkName":"component---src-templates-blog-post-js","path":"/o-que-s√£o-componentes-no-react-part-2/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://devjuniorplus.com.br"}},"markdownRemark":{"fields":{"slug":"/o-que-s√£o-componentes-no-react-part-2/"},"frontmatter":{"description":"Vamos entender um dos principais conceitos do React","title":"O que s√£o componentes no React - Part II?","date":"02 de setembro de 2022","image":"assets/images/devin-pickell-1eRS74C-alQ-unsplash.jpeg"},"html":"<h2>Introdu√ß√£o</h2>\n<p>No √∫ltimo post (<a href=\"https://www.devjuniorplus.com.br/o-que-s%C3%A3o-componentes-no-react/\">clique aqui</a>), come√ßamos a entender o que s√£o componentes em React.</p>\n<p>Agora vamos criar nosso primeiro componentes, ou seja, bora codar!</p>\n</br>\n<h2>Preparativos</h2>\n<p>Vamos utilizar o <a href=\"https://vitejs.dev/guide/\">Vite</a> + TypeScript (se √© a primeira vez utilizando, n√£o se preocupe, vai ser bem simples e vamos aprendendo aos poucos). </p>\n<p>Acesse esse <a href=\"https://vite.new/react-ts\">link</a>, onde o Vite j√° disponibiliza um ambiente web para podermos come√ßar de forma r√°pida.</p>\n</br>\n<h2>Nosso primeiro componente</h2>\n<p>Vamos primeiro entrar no arquivo <code class=\"language-text\">App.tsx</code> e limpar ele, deixando somente o b√°sico, dessa forma:</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      Hello World\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Lembra que falamos no <a href=\"https://www.devjuniorplus.com.br/o-que-s%C3%A3o-componentes-no-react/\">√∫ltimo post</a> que um componente React √© uma fun√ß√£o que retorna um HTML? Perceba que temos uma fun√ß√£o chamada <code class=\"language-text\">App</code> e retorna uma <code class=\"language-text\">div</code> escrito \"Hello World\".</p>\n<p>Vamos agora criar nosso primeiro componente de fato. Dentro da pasta <code class=\"language-text\">src</code>, crie um novo arquivo chamado: <code class=\"language-text\">MyComponent.tsx</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">My component</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> MyComponent<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Agora precisamos chamar esse componente em algum lugar. </p>\n<p>Volte no arquivo <code class=\"language-text\">App.tsx</code> e importe o <code class=\"language-text\">MyComponent</code></p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> MyComponent <span class=\"token keyword\">from</span> <span class=\"token string\">'./MyComponent'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// &lt;- importa√ß√£o do MyComponent</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token punctuation\">/></span></span> <span class=\"token comment\">// &lt;- Componente</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Agora, no browser, podemos ver \"My component\" que √© o texto que temos dentro no nosso componente <code class=\"language-text\">MyComponent</code> certo? Massa n√©?!</p>\n<p>Mas e se quisermos ter dois componentes sendo exibidos em tela? Por exemplo nosso \"Hello World\" e o \"My component\", como podemos fazer?</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> MyComponent <span class=\"token keyword\">from</span> <span class=\"token string\">'./MyComponent'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      Hello World\n      \n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"> </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* &lt;- Podemos colocar o MyComponent dentro da div (children) */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Mas se quisermos ter mais de um elemento HTML, como podemos fazer?</p>\n<p>Da√≠, nesse caso precisamos sempre ter <strong>um √∫nico</strong> por volta, como um container.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// üö´ Forma errada! Isso vai retornar erro, pois temos dois elementos dentro do return</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// 1 elemento</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    Hello World\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  \n  <span class=\"token comment\">// 2 elemento</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token punctuation\">/></span></span> \n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ‚úÖ Forma correta! Apenas um elemento dentro do return </span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// 1 elemento</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n   \t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    \tHello World\n  \t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    \n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"> \n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</br>\n<h2>Fragment</h2>\n<p>Outra forma que podemos ter v√°rios elementos sendo retornados de um componente, √© utilizando <code class=\"language-text\">Fragment</code> do React.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n   \t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    \tHello World\n  \t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    \n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"> \n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">React.Fragment</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// OU simplesmente</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n   \t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    \tHello World\n  \t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  \n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyComponent</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"> \n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</br>\n<h2>Componentes mais din√¢micos</h2>\n<blockquote>\n<p>T√°, mas como eu crio componentes que posso passar um texto e ele exibir em tela?</p>\n</blockquote>\n<p>Boa pergunta! Para isso, precisamos entender o pr√≥ximo conceito conceito importante no React: <code class=\"language-text\">props</code>.</p>\n<p>O pr√≥ximo post vai ser focado apenas em props, para entendermos bem e come√ßarmos a criar componentes mais din√¢micos.</p>\n</br>\n<h2>Conclus√£o</h2>\n<p>Nesse post, aprofundamos mais sobre componentes, como podemos criar nossos pr√≥prios e utilizarmos em nossos projetos.</p>\n<p>Criamos nosso primeiro componente, aprendemos sobre o <code class=\"language-text\">Fragment</code> do React, que nos permite \"envelopar\" v√°rios componentes dentro do <code class=\"language-text\">return</code>.</p>\n<p>No pr√≥ximo post, vamos aprender sobre <code class=\"language-text\">props</code> e enviar informa√ß√µes para nossos componentes e muito mais! </p>\n<p>At√© a pr√≥xima!</p>","timeToRead":3}},"pageContext":{"slug":"/o-que-s√£o-componentes-no-react-part-2/","previousPost":{"fields":{"slug":"/o-que-s√£o-componentes-no-react/"},"frontmatter":{"title":"O que s√£o componentes no React - Part I?"}},"nextPost":null}},"staticQueryHashes":["2037742868","3149229692","764694655"]}